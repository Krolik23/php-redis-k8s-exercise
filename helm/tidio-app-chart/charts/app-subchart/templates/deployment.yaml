apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.phpApp.appName }}
  labels:
    {{- include "app-subchart.labels" . | nindent 4 }}
  namespace: {{ .Values.general.namespace }}
spec:
  replicas: {{ .Values.phpApp.replicas }}
  selector:
    matchLabels:
      {{- include "app-subchart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app-subchart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.serviceAccounts}}
      serviceAccountName: {{ .phpAppServiceAccount }}
      {{- end }}
      containers:
      - name: {{ .Values.phpApp.appName }}
        image: {{ .Values.phpApp.image }}
        securityContext:
          {{- toYaml .Values.container.securityContext | nindent 10 }}
        # Force kubernetes to verify digest of the image with what it has cached on the node
        imagePullPolicy: {{ .Values.phpApp.imagePullPolicy }}
        ports:
        - containerPort: 80
        # Set memory/cpu requests=limits to have stability in this aspect and cpu requests != limits to minimize perf. variability but still have some burstable capabilities
        resources:
          {{- toYaml .Values.phpApp.resources | nindent 12 }}
        # Load redis connection envs vars from ConfigMap created along with other redis resources
        envFrom:
        - configMapRef:
            name: {{ .Values.redis.varsCMName }}
        env:
        - name: DB_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: db-access-app-php-tidio
              key: DB_CONNECTION_STRING
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-access-app-php-tidio
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-access-app-php-tidio
              key: DB_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-access-app-tidio
              key: REDIS_PASSWORD
        volumeMounts:
        # Add ability for basic php config customization through ConfigMap object
        - name: app-php-custom-config
          mountPath: /usr/local/etc/php/conf.d/app-php.ini
          subPath: app-php.ini
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: {{ .Values.phpApp.probes.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.phpApp.probes.readinessProbe.periodSeconds }}
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: {{ .Values.phpApp.probes.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.phpApp.probes.livenessProbe.periodSeconds }}
      volumes:
      - name: app-php-custom-config
        configMap:
          name: {{ .Values.phpApp.phpConfigName }}
        
